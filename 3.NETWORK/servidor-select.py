import socket
import select
import sys

server = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
# setsockopt: Define opcoes de skt //
# SOL_SOCKET -> manipular opcoes no nivel do socket
# SO_REUSEADDR -> definem que o socket sera reutilizado
# se nao sera considerado em uso em uma segunda execução
server.setsockopt(socket.SOL_SOCKET, socket.SO_REUSEADDR, 1)
server.bind(("0.0.0.0", int(sys.argv[1])))
server.listen(10)
# Clientes conectados
connectedHosts = []
while True:
    # select 3 Tipos de lista
    # Lista de Leitura: Espera ate estar pronta pra leitura
    read, write, ex = select.select([server]+connectedHosts, [], [])
    # o socket que vai ta sendo lido esta na posicao [0] do read
    skt = read[0]
    # se o socket lido é um servidor quer dizer que ele recebeu uma comunicacao e o cliente se conectou
    if skt is server:
        # server.accept() -> Retorna uma tupla ( Socket Cliente, ( Ip cliente, Porta cliemn) )
        (clientSkt, (clientIp, clientPort)) = server.accept()
        print(f"New Client connected from {clientIp}:{clientPort}")
        connectedHosts.append(clientSkt)
    else:  # se skt lido for um cliente
        # recv() -> recebe o dado do cliente
        data = skt.recv(1024)
        if data:
            skt.send(data)
        else:
            # Mensagem no servidor
            print(f"Cliente se desconectou do Servidor ")
            connectedHosts.remove(skt)
            skt.close()

# Exercicio: Fazer listar o Cliente que se desconectou ao servidor
