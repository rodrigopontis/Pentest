import threading
import socket


HOST = input("Host: ")
PORT = int(input("Port: "))
server = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
server.bind((HOST, PORT))  # duplo parenteses porq é um objt
server.listen()
print(f'Server Is Up and Listening on {HOST}:{PORT}')

clientList = []  # Lista de Ips
usernameList = []

# Metodo broadcast
# Manda mensagem pra todos da lista


def globalMessage(message):
    for client in clientList:
        client.send(message)

# Vamos ter varias threads, cada thread é um client

# Toda vez que receve uma mensagem


def handleMessages(client):
    # Cliente conectado escuta mensagem
    # e faz mensagem broadcast
    while True:
        try:
            reciveMessageFromClient = client.recv(2048).decode('ascii')
            globalMessage(
                f'{usernameList[clientList.index(client)] } : {reciveMessageFromClient}'.encode('ascii'))
        except:
            clientLeaved = client.index(client)
            client.close()
            clientList.remove(clientList[clientLeaved])
            clientLeavedUsername = usernameList[clientLeaved]
            print(f'{clientLeavedUsername} has left the chat...')
            globalMessage(
                f'{clientLeavedUsername} has left...'.encode('ascii'))
            usernameList.remove(clientLeavedUsername)
            break
# Inicio
# Quando o cliente se conecta ele é adicionado a lista


def initialConnection():
    while True:
        try:
            client, address = server.accept()
            print(f"New Connection Ip: {address} ")
            clientList.append(client)
            # Envia pro servidor cadastrar o usuario
            client.send('getUser'.encode("ascii"))
            username = client.recv(2048).decode("ascii")  # recebe usuario
            usernameList.append(username)
            globalMessage(
                f'{username} just joined at the chat!'.encode('ascii'))
            user_thread = threading.Thread(
                target=handleMessages, args=(client,))
            user_thread.start()
        except:
            pass


def main():
    initialConnection()


main()
